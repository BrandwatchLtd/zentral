input {
    beats {
        port => "5044"
        ssl => true
        ssl_certificate => "/zentral_tls/zentral.crt"
        ssl_key => "/zentral_tls/zentral_pkcs8.key"
        ssl_certificate_authorities => ["/scep_CA/ca.pem"]
        ssl_verify_mode => "peer"
        ssl_peer_metadata => true
    }
}

filter {
    mutate {
        add_field => { "filebeat_ip_address" => "%{[@metadata][ip_address]}"
                       "tls_peer" => "%{[@metadata][tls_peer]}" }
    }
    if [zentral_log_type] == "zentral.contrib.jamf.jamf_change_management" {
        mutate {
            add_field => { "[@metadata][routing_key]" => 'jamf_beats' }
        }
        grok {
            match => { "message" => "(?<access_denied>Access Denied: )?\[(?<user>[^\[\]]+)\] \[(?<action>\S*)\] \[(?<object>[^\[\]]+)\] \[%{DATESTAMP_OTHER:timestamp}\](?m)\s*%{GREEDYDATA:object_info}" }
        }
        if [access_denied] =~ /.+/ {
            mutate {
                replace => { "access_denied" => true }
            }
        }
        date {
            match => [ "timestamp", "EEE MMM dd HH:mm:ss zzz YYYY" ]
        }
    } else if [zentral_log_type] == "zentral.contrib.jamf.jamf_software_server" {
        mutate {
            add_field => { "[@metadata][routing_key]" => 'jamf_beats' }
        }
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[(?<log_level>\S+)\s*\] \[(?<info_1>\S+)\s*\] \[(?<component>\S+)\s*\] - %{GREEDYDATA:cleaned_message}" }
        }
        date {
            match => [ "timestamp", "YYYY-MM-dd HH:mm:ss,SSS" ]
        }
    } else if [zentral_log_type] == "zentral.contrib.jamf.jss_access" {
        mutate {
            add_field => { "[@metadata][routing_key]" => 'jamf_beats' }
        }
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}: username=(?<username>[^,]+), status=(?<status>[^,]+), ipAddress=(?<ip_address>[^,]+), entryPoint=%{GREEDYDATA:entry_point}" }
        }
        date {
            match => [ "timestamp", "YYYY-MM-dd HH:mm:ss,SSS" ]
        }
    } else if [zentral_log_type] == "zentral.contrib.santa.santa_log" {
        mutate {
            add_field => { "[@metadata][routing_key]" => 'santa_logs' }
        }
    } else if [zentral_log_type] == "zentral.contrib.xnumon.xnumon_log" {
        mutate {
            add_field => { "[@metadata][routing_key]" => 'xnumon_logs' }
        }
    }
}

output {
    stdout { codec => json }
    rabbitmq {
        host => "rabbitmq"
        exchange => "raw_events"
        exchange_type => "direct"
        key => "%{[@metadata][routing_key]}"
    }
}
